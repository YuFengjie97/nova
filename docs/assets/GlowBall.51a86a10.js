import{d as B,b as x,h as N,G as A,ab as D,C as W,au as M,O as z,J as V,aG as H,S as O,P as I,W as F,E as Y,V as J,c as K,a as y,aK as $,o as q,_ as Q}from"./index.d28c4049.js";import{O as X}from"./OrbitControls.7467a5d6.js";import{R as Z,E as C,S as j}from"./RenderPass.5fb2dbda.js";import{U as ee}from"./UnrealBloomPass.b8663b98.js";const ne={class:"viewCon"},ae=B({__name:"GlowBall",setup(oe){const g=x(),S=x();let d=window.innerWidth,c=window.innerHeight,u,i,o,t,r,s,w;const p=1,_=0;N(()=>{P(),U(),G(),T(),l()});const a={exposure:1,bloomStrength:5,bloomThreshold:0,bloomRadius:0,scene:"normalAndGlow"};function P(){let e=new A;e.add(a,"exposure",.1,2).onChange(function(n){t.toneMappingExposure=Math.pow(n,4),l()}),e.add(a,"bloomThreshold",0,1).onChange(function(n){r.threshold=Number(n),l()}),e.add(a,"bloomStrength",0,10).onChange(function(n){r.strength=Number(n),l()}),e.add(a,"bloomRadius",0,1,.001).onChange(function(n){r.radius=Number(n),l()}),e.add(a,"scene",["normalAndGlow","onlyNnormal","onlyGlow"]).onChange(n=>{a.scene=n,l()})}function G(){const e=new D(1,15);for(let n=0;n<50;n++){const h=new W;h.setHSL(Math.random(),.7,.3);const v=new M({color:h}),m=new z(e,v);m.position.x=Math.random()*10-5,m.position.y=Math.random()*10-5,m.position.z=Math.random()*10-5,m.scale.setScalar(Math.random()*Math.random()+.5),m.layers.enable(n%2===0?p:_),i.add(m)}}function T(){const e=`varying vec2 vUv;
  void main() {
    vUv = uv;
    gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
  }
  `,n=`uniform sampler2D baseTexture;
  uniform sampler2D bloomTexture;
  varying vec2 vUv;
  void main() {
    gl_FragColor = ( texture2D( baseTexture, vUv ) + vec4( 1.0 ) * texture2D( bloomTexture, vUv ) );
  }
  `,h=new Z(i,o);r=new ee(new V(window.innerWidth,window.innerHeight),1.5,.4,.85),r.threshold=a.bloomThreshold,r.strength=a.bloomStrength,r.radius=a.bloomRadius,s=new C(t),s.addPass(h),s.addPass(r);const v=new j(new H({uniforms:{baseTexture:{value:null},bloomTexture:{value:s.renderTarget2.texture}},vertexShader:e,fragmentShader:n,defines:{}}),"baseTexture");v.needsSwap=!0,w=new C(t),w.addPass(h),w.addPass(v)}function l(){let{scene:e}=a;e==="onlyNnormal"?(o.layers.set(_),t.render(i,o)):e==="onlyGlow"?(o.layers.set(p),s.renderToScreen=!0,s.render(),o.layers.set(_)):e==="normalAndGlow"&&(s.renderToScreen=!1,i.traverse(L),s.render(),i.traverse(R),w.render())}const f={},E=new M({color:"black"}),b=new $;b.set(p);function L(e){e.isMesh&&b.test(e.layers)===!1&&(f[e.uuid]=e.material,e.material=E)}function R(e){f[e.uuid]&&(e.material=f[e.uuid],delete f[e.uuid])}function U(){i=new O,o=new I(75,d/c,.1,1e3),t=new F({canvas:g.value,antialias:!0}),t.setSize(d,c),window.addEventListener("resize",k),i.add(new Y(4210752)),u=new X(o,t.domElement),u.target=new J(0,0,0),u.object.position.set(10,10,10),u.update(),u.addEventListener("change",l)}function k(){d=window.innerWidth,c=window.innerHeight,o.aspect=d/c,o.updateProjectionMatrix(),t.setSize(d,c),s.setSize(d,c)}return(e,n)=>(q(),K("div",ne,[y("div",{class:"canvasCon",ref_key:"canvasCon",ref:S},[y("canvas",{class:"canvas",ref_key:"canvasDom",ref:g},null,512)],512)]))}});const le=Q(ae,[["__scopeId","data-v-53e48252"]]);export{le as default};
