(function(){"use strict";const{random:r,PI:y,sin:v,cos:m,sqrt:x,min:M}=Math,s={typeNum:0,typeParticleNum:0,width:0,height:0,xRange:0,yRange:0,frictionFactor:0,distMin:0,distMax:0,forceFactor:0};class F{constructor(){this.particleNum=0,this.AGrid=[];const{typeNum:t,typeParticleNum:e,width:a,height:i}=s;this.particleNum=t*e,this.positions=new Float32Array(t*e*3),this.vels=new Float32Array(t*e*3),this.types=new Float32Array(t*e);for(let o=0;o<t;o++)for(let c=0;c<e;c++){const n=o*e+c;this.types[n]=o;const{xRange:p,yRange:l}=s;this.positions[n*3]=r()*p/2-p/4+a/2,this.positions[n*3+1]=r()*l/2-l/4+i/2,this.positions[n*3+2]=0,this.vels[n*3]=0,this.vels[n*3+1]=0,this.vels[n*3+2]=0}for(let o=0;o<t;o++){const c=[];for(let n=0;n<t;n++)c.push(r()*2-1);this.AGrid.push(c)}}accelatorForce(t,e){return t<=s.distMin?t/s.distMin-1:t<s.distMax?(t-s.distMin)/(s.distMax-s.distMin)*e:0}getPos(t){return[this.positions[3*t],this.positions[3*t+1],this.positions[3*t+2]]}getVel(t){return[this.vels[3*t],this.vels[3*t+1],this.vels[3*t+2]]}edge(t){const[e,a]=this.getPos(t);if(e<0||e>s.xRange||a<0||a>s.yRange){const i=r()*2*y,o=r()*M(s.xRange,s.yRange)/2;return this.positions[t*3]=m(i)*o+s.xRange/2,this.positions[t*3+1]=v(i)*o+s.yRange/2,this.vels[t*3]=0,this.vels[t*3+1]=0,!0}return!1}updatePos(t,e,a){this.vels[t*3]+=e,this.vels[t*3+1]+=a,this.vels[t*3]*=s.frictionFactor,this.vels[t*3+1]*=s.frictionFactor;const[i,o]=this.getVel(t);this.positions[t*3]+=i,this.positions[t*3+1]+=o}update(){for(let t=0;t<this.particleNum;t++){let e=0,a=0;for(let i=0;i<this.particleNum;i++){if(this.edge(t)||this.edge(i)||t===i)continue;const[o,c]=this.getPos(t),[n,p]=this.getPos(i),l=n-o,u=p-c,d=x(l**2+u**2),P=this.types[t],R=this.types[i],_=this.AGrid[P][R],f=this.accelatorForce(d,_)*s.forceFactor;e+=d===0?-.1*s.forceFactor:l/d*f,a+=d===0?-.1*s.forceFactor:u/d*f}this.updatePos(t,e,a)}}}let h;addEventListener("message",g=>{const{tag:t,data:e}=g.data;if(t==="close"&&(close(),postMessage({tag:"close_done"})),t==="init_settings"){for(const a in e){const i=a;s[i]=e[i]}postMessage({tag:"init_settings_done"})}t==="init_cloud"&&(h=new F,postMessage({tag:"init_cloud_done",data:{positions:h.positions,types:h.types}})),t==="update_cloud"&&(h.update(),postMessage({tag:"update_cloud_done",data:{positions:h.positions}}))},!1)})();
