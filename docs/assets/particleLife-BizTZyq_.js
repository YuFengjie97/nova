var T=Object.defineProperty;var q=(s,o,i)=>o in s?T(s,o,{enumerable:!0,configurable:!0,writable:!0,value:i}):s[o]=i;var r=(s,o,i)=>(q(s,typeof o!="symbol"?o+"":o,i),i);import{d as D,r as E,h as G,C as K,B as Q,b as Z,L as H,Q as J,aL as O,K as V,N as P,R as X,o as Y}from"./index-B4Kd1SlF.js";import{c as $}from"./chroma-DCKfFEcf.js";import{i as tt}from"./initThree-BTudTUM6.js";import{p as et}from"./dotTexture-NXlc0I5v.js";import"./_commonjsHelpers-BosuxZz1.js";import"./OrbitControls-immaoKZ1.js";import"./initStats-C5VNgmNK.js";function ot(s){return new Worker("/nova/assets/particleLife-CIoNnqtk.js",{name:s==null?void 0:s.name})}const l=8,u=50,dt=D({__name:"particleLife",setup(s){const o=new ot,{PI:i,min:C,atan:v}=Math,g=E(),x=l*u,B=$.scale(["#00b894","#0984e3","#6c5ce7","#fdcb6e","#e84393"]);return G(async()=>{const{width:d,height:c}=g.value.getBoundingClientRect(),{scene:M,camera:p,renderWrap:F}=tt(g.value,!0,!1,!1),f=d,w=c,k=8,L=.8,N=C(d,c),m=k*2,_=N/10,z=.5;M.background=new K(0);const A=800;p.position.set(f/2,w/2,A),p.aspect=d/c,p.fov=v(c/2/A)*2/i*180,p.lookAt(f/2,w/2,0),p.updateProjectionMatrix();class R{constructor(e,n){r(this,"positions");r(this,"colors");r(this,"types");r(this,"geo",new H);r(this,"mat",new J({size:k,map:new O().load(et),blending:V,transparent:!1,sizeAttenuation:!0,vertexColors:!0}));r(this,"mesh");this.positions=new Float32Array(l*u*3),this.types=new Float32Array(l*u);for(let t=0;t<e.length;t++)this.positions[t]=e[t];for(let t=0;t<n.length;t++)this.types[t]=n[t];this.positions=e,this.types=n,this.colors=new Float32Array(x*3),this.geo.setAttribute("position",new P(this.positions,3)),this.geo.setAttribute("color",new P(this.colors,3));for(let t=0;t<l;t++)for(let h=0;h<u;h++){const b=t*u+h,[S,j,I]=B(t/l).gl();this.colors[b*3]=S,this.colors[b*3+1]=j,this.colors[b*3+2]=I}this.mesh=new X(this.geo,this.mat),this.mesh.geometry.attributes.position.needsUpdate=!0,M.add(this.mesh)}accelatorForce(e,n){return e<=m?e/m-1:e<_?(e-m)/(_-m)*n:0}getPos(e){return[this.positions[3*e],this.positions[3*e+1],this.positions[3*e+2]]}update(){o.postMessage({tag:"update_cloud"})}draw(){this.mesh.geometry.attributes.position.needsUpdate=!0,this.mesh.geometry.attributes.color.needsUpdate=!0}}async function U(){return new Promise(a=>{o.postMessage({tag:"init_settings",data:{typeNum:l,typeParticleNum:u,width:d,height:c,xRange:f,yRange:w,frictionFactor:L,distMin:m,distMax:_,forceFactor:z}}),o.onmessage=e=>{e.data.tag==="init_settings_done"&&(console.log("init_settings_done"),a(1))}})}await U();async function W(){return o.postMessage({tag:"init_cloud"}),new Promise(a=>{o.onmessage=e=>{if(e.data.tag==="init_cloud_done"){const{positions:n,types:t}=e.data.data,h=new R(n,t);console.log("init_cloud_done"),a(h)}}})}const y=await W();o.onmessage=a=>{const{data:e}=a.data;if(a.data.tag==="update_cloud_done"){const{positions:n}=e;for(let t=0;t<n.length;t++)y.positions[t]=n[t]}},F(()=>{y.update(),y.draw()})()}),Q(()=>{o.postMessage("close"),o.terminate()}),(d,c)=>(Y(),Z("div",{ref_key:"con",ref:g,class:"w-full h-full"},null,512))}});export{dt as default};
