var d=Object.defineProperty;var l=(i,t,s)=>t in i?d(i,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):i[t]=s;var h=(i,t,s)=>(l(i,typeof t!="symbol"?t+"":t,s),s);import{p as e}from"./p5.min.57e3792e.js";import{m as p}from"./math.c1d1c73e.js";class o{constructor(t){h(this,"$p");h(this,"pos",new e.Vector(0,0));h(this,"rangeWidth",100);h(this,"rangeHeight",100);h(this,"vel",new e.Vector(0,0));h(this,"acc",new e.Vector(0,0));h(this,"maxSpeed",4);h(this,"r",1);h(this,"color","red");h(this,"h",0);this.$p=t.$p,this.rangeWidth=t.rangeWidth,this.rangeHeight=t.rangeHeight,this.pos=t.position,t.r&&(this.r=t.r),t.color&&(this.color=t.color)}draw(t=!0){t?(this.$p.stroke(this.h,255,255,30),this.h=this.h+1,this.h>255&&(this.h=0)):this.$p.stroke(this.color),this.$p.strokeWeight(this.r),this.$p.circle(this.pos.x,this.pos.y,this.r*2)}update(){this.vel.add(this.acc),this.vel.limit(this.maxSpeed),this.pos.add(this.vel),this.acc.mult(0)}applyForce(t){this.acc.add(t)}}class n extends o{constructor(s){super(s);h(this,"prevPos",new e.Vector(0,0));this.prevPos=this.pos.copy()}draw(s=!0){s?(this.$p.stroke(this.h,255,255,30),this.h=this.h+1,this.h>255&&(this.h=0)):this.$p.stroke(this.color),this.$p.strokeWeight(this.r),this.$p.line(this.pos.x,this.pos.y,this.prevPos.x,this.prevPos.y)}update(){this.edges(),this.updatePrev(),super.update()}updatePrev(){this.prevPos.x=this.pos.x,this.prevPos.y=this.pos.y}edges(){this.pos.x>this.rangeWidth&&(this.pos.x=0,this.updatePrev()),this.pos.x<0&&(this.pos.x=this.rangeWidth,this.updatePrev()),this.pos.y>this.rangeHeight&&(this.pos.y=0,this.updatePrev()),this.pos.y<0&&(this.pos.y=this.rangeHeight,this.updatePrev())}}class v extends o{constructor(t,s){super(t),this.vel=s}draw(t=!0){t?(this.$p.fill(this.h,255,255,30),this.h=this.h+1,this.h>255&&(this.h=0)):this.$p.fill(this.color),this.$p.noStroke(),this.$p.circle(this.pos.x,this.pos.y,this.r*2)}updateColor(){this.color=c()}update(){this.pos.add(this.vel),this.edge()}edge(){const{pos:{x:t,y:s},rangeHeight:r,rangeWidth:a}=this;(t<=0||t>=a)&&(this.updateColor(),this.vel.mult([-1,1])),(s<=0||s>=r)&&(this.updateColor(),this.vel.mult([1,-1]))}}function c(i=255){i>255&&(i=i%255);let t=p(i),s=p(i),r=p(i);return`rgb(${t},${s},${r})`}export{n as P,v as a,c as g};
