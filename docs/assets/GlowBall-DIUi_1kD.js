import{G as A}from"./dat.gui.module-DcMWPYuf.js";import{d as D,r as p,j as W,af as z,N as B,aE as S,Y as V,V as H,aQ as O,S as I,P as Y,W as F,Q,R as $,e as q,f as C,aU as J,o as K}from"./index-Dk52mj26.js";import{O as X}from"./OrbitControls-Rz_z-Chd.js";import{R as Z,E as P,S as j}from"./RenderPass-BN88JlIK.js";import{U as ee}from"./UnrealBloomPass-q4RNDoWX.js";const g=1,b=0,ie=D({__name:"GlowBall",setup(ne){const M=p(),_=p();let c=window.innerWidth,m=window.innerHeight,h,l,o,t,i,r,w;W(()=>{T(),k(),E(),G(),d()});const a={exposure:1,bloomStrength:5,bloomThreshold:0,bloomRadius:0,scene:"normalAndGlow"},x=p();function T(){var s;const e=new A({autoPlace:!1});(s=x.value)==null||s.append(e.domElement),e.add(a,"exposure",.1,2).onChange(n=>{t.toneMappingExposure=n**4,d()}),e.add(a,"bloomThreshold",0,1).onChange(n=>{i.threshold=Number(n),d()}),e.add(a,"bloomStrength",0,10).onChange(n=>{i.strength=Number(n),d()}),e.add(a,"bloomRadius",0,1,.001).onChange(n=>{i.radius=Number(n),d()}),e.add(a,"scene",["normalAndGlow","onlyNnormal","onlyGlow"]).onChange(n=>{a.scene=n,d()})}function E(){const e=new z(1,15);for(let s=0;s<50;s++){const n=new B;n.setHSL(Math.random(),.7,.3);const v=new S({color:n}),u=new V(e,v);u.position.x=Math.random()*10-5,u.position.y=Math.random()*10-5,u.position.z=Math.random()*10-5,u.scale.setScalar(Math.random()*Math.random()+.5),u.layers.enable(s%2===0?g:b),l.add(u)}}function G(){const e=`varying vec2 vUv;
  void main() {
    vUv = uv;
    gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
  }
  `,s=`uniform sampler2D baseTexture;
  uniform sampler2D bloomTexture;
  varying vec2 vUv;
  void main() {
    gl_FragColor = ( texture2D( baseTexture, vUv ) + vec4( 1.0 ) * texture2D( bloomTexture, vUv ) );
  }
  `,n=new Z(l,o);i=new ee(new H(window.innerWidth,window.innerHeight),1.5,.4,.85),i.threshold=a.bloomThreshold,i.strength=a.bloomStrength,i.radius=a.bloomRadius,r=new P(t),r.addPass(n),r.addPass(i);const v=new j(new O({uniforms:{baseTexture:{value:null},bloomTexture:{value:r.renderTarget2.texture}},vertexShader:e,fragmentShader:s,defines:{}}),"baseTexture");v.needsSwap=!0,w=new P(t),w.addPass(n),w.addPass(v)}function d(){const{scene:e}=a;e==="onlyNnormal"?(o.layers.set(b),t.render(l,o)):e==="onlyGlow"?(o.layers.set(g),r.renderToScreen=!0,r.render(),o.layers.set(b)):e==="normalAndGlow"&&(r.renderToScreen=!1,l.traverse(L),r.render(),l.traverse(U),w.render())}const f={},R=new S({color:"black"}),y=new J;y.set(g);function L(e){e.isMesh&&y.test(e.layers)===!1&&(f[e.uuid]=e.material,e.material=R)}function U(e){f[e.uuid]&&(e.material=f[e.uuid],delete f[e.uuid])}function k(){l=new I,o=new Y(75,c/m,.1,1e3),t=new F({canvas:M.value,antialias:!0}),t.setSize(c,m),window.addEventListener("resize",N),l.add(new Q(4210752)),h=new X(o,t.domElement),h.target=new $(0,0,0),h.object.position.set(10,10,10),h.update(),h.addEventListener("change",d)}function N(){c=window.innerWidth,m=window.innerHeight,o.aspect=c/m,o.updateProjectionMatrix(),t.setSize(c,m),r.setSize(c,m)}return(e,s)=>(K(),q("div",{ref_key:"con",ref:x,class:""},[C("div",{ref_key:"canvasCon",ref:_,class:"canvasCon"},[C("canvas",{ref_key:"canvasDom",ref:M,class:"canvas"},null,512)],512)],512))}});export{ie as default};
