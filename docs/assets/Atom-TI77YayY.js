var te=Object.defineProperty;var oe=(u,l,c)=>l in u?te(u,l,{enumerable:!0,configurable:!0,writable:!0,value:c}):u[l]=c;var r=(u,l,c)=>(oe(u,typeof l!="symbol"?l+"":l,c),c);import{d as ne,b as _,ak as se,e as ae,a1 as re,ar as ie,a8 as B,ao as I,M as k,G as le,V as O,ap as ce,E as de,L as he,aq as me,S as ue,C as pe,P as fe,W as ge,A as ve,y as we,o as be,c as Ce,a as U,as as xe,af as ye,_ as Me}from"./index-242-C2dX.js";import{S as Pe}from"./stats.module-nRd2dy6L.js";import{O as Ee}from"./OrbitControls-_GrtrkN1.js";import{R as _e,E as G,S as Se}from"./RenderPass-8wrLhG63.js";import{U as Ae}from"./UnrealBloomPass-YcpCEFaY.js";import{u as Le}from"./useGUI-7eNpPIRv.js";import"./dat.gui.module-PWGADmkp.js";const Re=ne({__name:"Atom",setup(u){const{random:l,PI:c,floor:Te,ceil:De,min:Be,max:Ie,sin:ke,cos:Oe}=Math,S=_(),A=_();let g=window.innerWidth,v=window.innerHeight,E,x,i,w,p,b,y,f,M,C,m;const L=1,R=new xe;R.set(L);const P={},H=new se({color:0}),o={showAxes:!1,atomColor:7816649,bloomStrength:5,bloomThreshold:0,bloomRadius:1,lightIntensity:10,lightDistance:90,lightDecay:1,electronNum:100,tInc:.001,electronColor:623843,orbitColor:16611752,showOrbit:!1};ae(()=>{W(),$(),Y(),z(),V(),D()});function N(){q()}const T=_();function W(){const{gui:n}=Le(T.value);n.add(o,"showAxes").onChange(e=>{y.visible=e});const t=n.addFolder("Atom");t.open(),t.addColor(o,"atomColor").onChange(e=>{m.mesh.material.color.setHex(e),b.color.setHex(e)}),t.add(o,"bloomStrength",0,10,.1).onChange(e=>{C.strength=e}),t.add(o,"bloomThreshold",0,5,.1).onChange(e=>{C.threshold=e}),t.add(o,"bloomRadius",0,5,.1).onChange(e=>{C.radius=e}),t.add(o,"lightIntensity",0,200,1).onChange(e=>{b.intensity=e}),t.add(o,"lightDistance",0,160,1).onChange(e=>{b.distance=e}),t.add(o,"lightDecay",0,2,.01).onChange(e=>{b.decay=e});const s=n.addFolder("Electron");s.open(),s.add(o,"electronNum",1,100,1).onChange(e=>{m.updateElectronNum(e)}),s.add(o,"tInc",0,.02,.001).name("velocity"),s.addColor(o,"electronColor").onChange(e=>{m.electrons.forEach(a=>{a.updateColor(e)})}),s.add(o,"showOrbit").onChange(e=>{m.electrons.forEach(a=>{a.orbitMesh.visible=e})}),s.addColor(o,"orbitColor").onChange(e=>{m.electrons.forEach(a=>{a.orbitMesh.material.color.set(e)})})}function F(n,t,s){const{lightIntensity:e,lightDistance:a,lightDecay:d}=o,h=new ye(o.atomColor,e,a,d);return h.position.set(n,t,s),i.add(h),h}function V(){b=F(0,0,0)}function z(){m=new X(o.electronNum)}function q(){m.electrons.forEach(n=>{n.moveByCurve()})}function Y(){const n=new _e(i,w),{bloomStrength:t,bloomRadius:s,bloomThreshold:e}=o;C=new Ae(new re(window.innerWidth,window.innerHeight),t,s,e),f=new G(p),f.renderToScreen=!1,f.addPass(n),f.addPass(C);const a=`
  varying vec2 vUv;
  void main() {
    vUv = uv;
    gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
  }
  `,d=`
  uniform sampler2D baseTexture;
  uniform sampler2D bloomTexture;
  varying vec2 vUv;
  void main() {
    gl_FragColor = ( texture2D( baseTexture, vUv ) + vec4( 1.0 ) * texture2D( bloomTexture, vUv ) );
  }
  `;M=new G(p);const h=new Se(new ie({uniforms:{baseTexture:{value:null},bloomTexture:{value:f.renderTarget2.texture}},vertexShader:a,fragmentShader:d,defines:{}}),"baseTexture");h.needsSwap=!0,M.addPass(n),M.addPass(h)}function J(){i.traverse(K),f.render(),i.traverse(Q),M.render()}function K(n){const t=n.material;t&&R.test(n.layers)===!1&&(P[n.uuid]=t,n.material=H)}function Q(n){P[n.uuid]&&(n.material=P[n.uuid],delete P[n.uuid])}class X{constructor(t){r(this,"r",40);r(this,"curveR",80);r(this,"mesh");r(this,"electrons",[]);const s=new B(this.r,128,128),e=new I({color:o.atomColor}),a=new k(s,e);a.layers.enable(L),this.mesh=a,i.add(a);for(let d=0;d<t;d++)this.electrons.push(new Z(c*2/t*d,this.curveR))}updateElectronNum(t){const s=c*2/t;this.electrons.forEach((e,a)=>{a<t?(e.updateOrbitRotation(s*a),e.group.visible=!0):e.group.visible=!1})}}class Z{constructor(t,s){r(this,"r",2);r(this,"group",new le);r(this,"curveR");r(this,"orbitCurve");r(this,"orbitMesh");r(this,"mesh");r(this,"t",l());r(this,"v",new O);this.curveR=s,i.add(this.group);const e=new B(this.r,128,128),a=new I({color:o.electronColor});this.mesh=new k(e,a),this.group.add(this.mesh),this.orbitCurve=new ce(0,0,s,s,0,2*Math.PI,!0,c/3);const d=this.orbitCurve.getSpacedPoints(300),h=new de().setFromPoints(d),ee=new he({color:o.orbitColor});this.orbitMesh=new me(h,ee),this.orbitMesh.visible=o.showOrbit,this.group.add(this.orbitMesh),this.group.rotation.x=t,this.group.rotation.y=t}moveByCurve(){this.t>=1&&(this.t=0),this.t+=o.tInc;const t=this.orbitCurve.getPointAt(this.t);this.mesh.position.x=t.x,this.mesh.position.y=t.y}updateOrbitRotation(t){this.group.rotation.x=t,this.group.rotation.y=t}updateColor(t){this.mesh.material.color.set(t)}}function $(){i=new ue,i.background=new pe(0),w=new fe(75,g/v,.1,1e3),p=new ge({canvas:S.value,antialias:!0}),p.setSize(g,v),window.addEventListener("resize",j),y=new ve(1e3),y.visible=o.showAxes,i.add(y),i.add(new we(4210752)),E=Pe(),A.value.append(E.dom),x=new Ee(w,p.domElement),x.target=new O(0,0,0),x.object.position.set(0,0,200),x.update()}function D(){requestAnimationFrame(D),E.update(),N(),J()}function j(){g=window.innerWidth,v=window.innerHeight,w.aspect=g/v,w.updateProjectionMatrix(),p.setSize(g,v)}return(n,t)=>(be(),Ce("div",{ref_key:"con",ref:T},[U("div",{ref_key:"canvasCon",ref:A,class:"canvasCon"},[U("canvas",{ref_key:"canvasDom",ref:S,class:"canvas"},null,512)],512)],512))}}),qe=Me(Re,[["__scopeId","data-v-8eb5fbc5"]]);export{qe as default};
