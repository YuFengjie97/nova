import{b as G}from"./simplex-noise-BkggsaiG.js";import{d as V,r as W,j as q,aX as H,I as J,L as F,U as K,X as M,Z as O,T as Q,aM as Y,$ as tt,e as et,o as st}from"./index-CqfaNC88.js";import{c as nt}from"./index-T8xJO8QF.js";import{p as ot}from"./dotTexture-NXlc0I5v.js";const B=1e4,h=100,g=4,I=2,ft=V({__name:"flowFieldPoint3D",setup(it){const{random:v,PI:R,sin:k,cos:L,floor:x}=Math,S=nt.scale(["#00b894","#0984e3","#6c5ce7","#fdcb6e","#e84393"]),T=G(),z=W(),t=new Float32Array(B*3),m=new Float32Array(B*3);let r=0,a=0,n=20;const C=[],w={};class U{constructor(o){this.ind=o,this.vel=new F(0,0,0)}getPos(){return{x:t[this.ind*3],y:t[this.ind*3+1],z:t[this.ind*3+2]}}edge(){const{x:o,y:l,z:f}=this.getPos();o<0&&(t[this.ind*3]=r),o>r&&(t[this.ind*3]=0),l<0&&(t[this.ind*3+1]=a),l>a&&(t[this.ind*3+1]=0),f<0&&(t[this.ind*3+2]=h),f>h&&(t[this.ind*3+2]=0)}update(o,l){this.edge();const[f,b,u]=S(o).gl();m[this.ind*3]=f,m[this.ind*3+1]=b,m[this.ind*3+2]=u,this.vel.add(l),this.vel.length()>I&&this.vel.setLength(I),t[this.ind*3]+=this.vel.x,t[this.ind*3+1]+=this.vel.y,t[this.ind*3+2]+=this.vel.z}}return q(()=>{const{width:$,height:o}=z.value.getBoundingClientRect();r=$/4,a=o/4,n=o/40;const{scene:l,camera:f,renderWrap:b}=H(z.value,!1,!1,!1);f.position.set(r/2,a/2,h*2),f.lookAt(r/2,a/2,0),l.background=new J(0);for(let e=-1;e*n<r+n;e+=1)for(let s=-1;s*n<a+n;s+=1)for(let i=-1;i*g<h+g;i+=1)w[`${e},${s},${i}`]={n:0,v:new F(0,0,0)};for(let e=0;e<B;e++){const s=v()*r,i=v()*a,c=v()*h;t[e*3]=s,t[e*3+1]=i,t[e*3+2]=c,C.push(new U(e))}const u=new K;u.setAttribute("position",new M(t,3)),u.setAttribute("color",new M(m,3));const E=new O({size:1.5,map:new Y().load(ot),blending:Q,transparent:!1,sizeAttenuation:!0,vertexColors:!0}),_=new tt(u,E);l.add(_);const N=.05,X=.05,Z=.01;let D=0;const j=.01;b(()=>{D+=j;let e=0;for(let s=-1;s*n<r+n;s+=1){e+=N;let i=0;for(let c=-1;c*n<a+n;c+=1){i+=X;let y=0;for(let d=-1;d*g<h+g;d+=1){y+=Z;const p=T(e,i,y,D)*.5+.5,A=4*R*p,P=I*.1*p;w[`${s},${c},${d}`].n=p,w[`${s},${c},${d}`].v.set(L(A)*P,k(A)*P,k(A)*P)}}}C.forEach(s=>{const{x:i,y:c,z:y}=s.getPos(),{n:d,v:p}=w[`${x(i/n)},${x(c/n)},${x(y/g)}`];s.update(d,p)}),_.geometry.attributes.position.needsUpdate=!0,_.geometry.attributes.color.needsUpdate=!0})()}),($,o)=>(st(),et("div",{ref_key:"con",ref:z,class:"w-full h-full"},null,512))}});export{ft as default};
